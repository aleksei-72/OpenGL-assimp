#include <GL/glew.h>
#include <src/3d/mesh/simpleMeshes.h>

#include <iostream>

std::vector<Vertex> generateCube(float scale)
{
    GLfloat buffer[] =
    {
         // vertex          texture     normal

         // front
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
        -1.0,  1.0,  1.0,   0.0, 1.0,   0.0, 0.0, 0.0,
        -1.0, -1.0,  1.0,   0.0, 0.0,   0.0, 0.0, 0.0,

        -1.0, -1.0,  1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
         1.0, -1.0,  1.0,   1.0, 0.0,   0.0, 0.0, 0.0,
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,


         // back
        -1.0,  1.0, -1.0,   0.0, 1.0,   0.0, 0.0, 0.0,
         1.0,  1.0, -1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
        -1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,

        -1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
         1.0,  1.0, -1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
         1.0, -1.0, -1.0,   1.0, 0.0,   0.0, 0.0, 0.0,


         // rigth
        -1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
        -1.0,  1.0, -1.0,   0.0, 1.0,   0.0, 0.0, 0.0,
        -1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,

        -1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
        -1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
        -1.0, -1.0,  1.0,   1.0, 0.0,   0.0, 0.0, 0.0,

        // left
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
         1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
         1.0,  1.0, -1.0,   0.0, 1.0,   0.0, 0.0, 0.0,

         1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
         1.0, -1.0,  1.0,   1.0, 0.0,   0.0, 0.0, 0.0,

        // bottom
         1.0, -1.0, -1.0,   1.0, 0.0,   0.0, 0.0, 0.0,
         1.0, -1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
        -1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,

        -1.0, -1.0,  1.0,   0.0, 1.0,   0.0, 0.0, 0.0,
        -1.0, -1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
         1.0, -1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,

        // top
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
         1.0,  1.0, -1.0,   1.0, 0.0,   0.0, 0.0, 0.0,
        -1.0,  1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,

        -1.0,  1.0, -1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
        -1.0,  1.0,  1.0,   0.0, 1.0,   0.0, 0.0, 0.0,
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0

    };

    return toVector(&buffer[0], sizeof(buffer) / sizeof(GLfloat), scale);
}


std::vector<Vertex> generatePlain(float scale)
{

    GLfloat buffer[] =
    {
         // vertex          texture     normal

         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0,
         1.0,  -1.0, 1.0,   1.0, 0.0,   0.0, 0.0, 0.0,
        -1.0,  -1.0, 1.0,   0.0, 0.0,   0.0, 0.0, 0.0,

        -1.0, -1.0,  1.0,   0.0, 0.0,   0.0, 0.0, 0.0,
        -1.0,  1.0,  1.0,   0.0, 1.0,   0.0, 0.0, 0.0,
         1.0,  1.0,  1.0,   1.0, 1.0,   0.0, 0.0, 0.0

    };

    return toVector(&buffer[0], sizeof(buffer) / sizeof(GLfloat), scale);
}


std::vector<Vertex> toVector(float *buffer, unsigned int bufferSize, float scale)
{
    std::vector<Vertex> vertices;

    for (unsigned int i = 0; i < bufferSize; i += 8)
    {
        for (unsigned int j = 0; j < 3; j++)
        {
            buffer[i+j] *= scale;
        }

        vertices.push_back(
            {
                {
                    buffer[i],
                    buffer[i+1],
                    buffer[i+2]
                },
                {
                    buffer[i+3],
                    buffer[i+4]
                },
                {
                    buffer[i+5],
                    buffer[i+6],
                    buffer[i+7]
                }
            }
        );
    }

    return vertices;
}
